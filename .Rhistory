# Lista de paquetes que queremos asegurarnos que estén instalados
packages <- c("data.table", "magrittr", "dplyr", "ggplot2")
# Función para instalar paquetes si no están ya instalados
install_if_missing <- function(package) {
if (!require(package, character.only = TRUE)) {
install.packages(package)
library(package, character.only = TRUE)
}
}
# Revisa cada paquete y lo instala si es necesario
sapply(packages, install_if_missing)
getwd()
library(data.table)
library(dplyr)
library(ggplot2)
DT = data.table(
ID = c("b","b","b","a","a","c"),
a = 1:6,
b = 7:12,
c = 13:18
)
DT
# Para comparar como se ve un df vs DT
as.data.frame(DT)
DT
data  <- fread("data/universal_top_spotify_songs.csv.gz")
head(data)
?fwrite
# ¿qué le falta al comando para que escriba el archivo comprimido?
fwrite(DT, "data/testDT.csv.gz", sep = ",", compress = "auto")
data[1:2,]
data[1:2]
data_MX <- data[country == "MX",]
data_MX
dim(data_MX)
data_MX_viejos <- data[country == "MX" & album_release_date <= 2000,]
data_MX_viejos <- data[country == "MX" & album_release_date <= 2000,]
data_MX_viejos
data_MX_viejos <- data[country == "MX" & album_release_date <= 2000,]
# Ordenar filas por bailabilidad
ordered_data_MX = data_MX[order(danceability, decreasing = T)]
ordered_data_MX
data_MX[order(-danceability)]
data_GB <- data[country == "GB",]
data_GB
ordered_data_GB = data_GB[order(daily_rank, decreasing = F)]
ordered_data_GB
unique(ordered_data_GB$name) |> head(n = 50)
ordered_data_GB
ordered_data_GB$album_release_date
min(ordered_data_GB$album_release_date)
min(ordered_data_GB$album_release_date, na.rm = T)
max(ordered_data_GB$album_release_date, na.rm = T)
data[,c(2,3,7),]
data[,name]
data[,name] %>% class
data[,list(artists,name,album_name)]
data[,.(artists,name,album_name)]
data[,spotify_id:weekly_movement]
variables <- c("artists","name","album_name")
data[ , ..variables]
colnames(data)
variables <- c("duration_ms","danceability","energy")
data[,..variables]
variables <- c("duration_ms","danceability","energy")
data[,..variables]
sept_caracter <-  data[snapshot_date == grepl("2024-09-.*"),..caracteristicas]
sept_caracter <-  data[format(snapshot_date, "%Y-m") == "2024-09",..caracteristicas]
sept_caracter <-  data[format(snapshot_date, "%Y-m") == "2024-09",..variables]
sept_caracter
sept_caracter <-  data[format(snapshot_date, "%Y-%m") == "2024-09",..variables]
sept_caracter
data[, .(artista = artists, song_name = name)]
### Contar el número de coincidencias
data[country == "MX" & acousticness > 0.5, length(spotify_id)]
data[country == "MX" & acousticness > 0.5, .N]
data[format(album_release_date, "%Y") < "2000" & daily_rank< 50, .N]
data[format(album_release_date, "%Y") < "2000" & daily_rank< 50, .N]
data[, duration_ms/1000/60]
data[, duration_ms/1000/60]  %>% mean()
data[,mean(duration_ms/1000/60)]
data[country == "MX", mean(popularity)]
colnames(data)
#### Modificar la tabla que está guardada en memoria con el operador :=
data[, date_dif := snapshot_date - album_release_date]
colnames(data)
data
data[, year := as.numeric(format(album_release_date, "%Y"))]
data
data[, c("diff_until_top50","duracion_minutos") := .(snapshot_date - album_release_date, duration_ms/1000/60)]
data
### Contar el numero de registro agrupando por cancion
data[,.N,by = name]
### Multiples factores por los cuales agrupar
times_song_per_album_per_country <- data[,.N,by = .(album_name,name,country)]
times_song_per_album_per_country
data = fread("data/universal_top_spotify_songs.csv.gz")
library(data.table)
library(magrittr)
library(ggplot2)
data = fread("data/universal_top_spotify_songs.csv.gz")
?melt
?dcast
colnames(data)
data[,.(.N), by = .(name,country,snapshot_date)]
data_long <- data[,.(.N), by = .(name,country,snapshot_date)]
freq_song_long <- data[,.(.N), by = .(name,country,snapshot_date)]
freq_song_wide <- dcast(freq_song_long, snapshot_date+name~country, value.var = "N")
freq_song_wide
freq_song_long <- data[,.(.N), by = .(name,country,format(snapshot_date,"%Y-%m"))]
freq_song_wide <- dcast(freq_song_long, snapshot_date+name~country, value.var = "N")
data
freq_song_long <- data[,.(.N), by = .(name,country,format(snapshot_date,"%Y-%m"))]
freq_song_long
freq_song_long <- data[,.(.N), by = .(name,country,month_yr = format(snapshot_date,"%Y-%m"))]
freq_song_long
freq_song_wide <- dcast(freq_song_long, snapshot_date+name~country, value.var = "N")
freq_song_wide <- dcast(freq_song_long, month_yr+name~country, value.var = "N")
freq_song_wide
#| echo: false
library(data.table)
library(magrittr)
library(ggplot2)
data = fread("data/universal_top_spotify_songs.csv.gz")
# Queremos crear una tabla de conteos de cada cancion por pais por fecha en la que se hizo el listado top 50
freq_song_long <- data[,.(.N), by = .(name,country,month_yr = format(snapshot_date,"%Y-%m"))]
freq_song_long
freq_song_long
freq_song_wide <- dcast(freq_song_long, month_yr+name~country, value.var = "N", fill = 0)
freq_song_wide
freq_song_wide
# Queremos crear una tabla de conteos de cada cancion por pais por fecha en la que se hizo el listado top 50
freq_song_long <- data[!is.na(country),.(.N), by = .(name,country,month_yr = format(snapshot_date,"%Y-%m"))]
freq_song_wide <- dcast(freq_song_long, month_yr+name~country, value.var = "N", fill = 0)
freq_song_long
data[!is.na(country)]
# Queremos crear una tabla de conteos de cada cancion por pais por fecha en la que se hizo el listado top 50
freq_song_long <- data[coutry != "",.(.N), by = .(name,country,month_yr = format(snapshot_date,"%Y-%m"))]
# Queremos crear una tabla de conteos de cada cancion por pais por fecha en la que se hizo el listado top 50
freq_song_long <- data[country != "",.(.N), by = .(name,country,month_yr = format(snapshot_date,"%Y-%m"))]
freq_song_long
freq_song_wide <- dcast(freq_song_long, month_yr+name~country, value.var = "N", fill = 0)
freq_song_wide
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N")
freq_song_long2
freq_song_long2
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N", value.factor = T)
freq_song_long2
?melt
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N", variable.factor = T)
freq_song_long2
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N", variable.factor = T, value.factor = T)
freq_song_long2
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N")
freq_song_long2
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N")
freq_song_long2
rm(freq_song_long2)
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N")
freq_song_long2
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N", variable.factor = F)
freq_song_long2
freq_song_long2 <- melt(freq_song_wide, id.vars = c("month_yr","name"), variable.name = "country", value.name = "N")
freq_song_long2
data
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"))]
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"))] %>%
dcast(., snapshot_date + name ~ country, value.var = "value", fun.aggregate = sum)
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"))] %>%
dcast(., snapshot_date + name ~ country, value.var = "N", fun.aggregate = sum)
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"))] %>%
dcast(., snapshot_date + name ~ country, value.var = "name", fun.aggregate = sum)
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"))] %>%
dcast(., month_yr + name ~ country, value.var = "name", fun.aggregate = sum)
data
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),popularity)] %>%
dcast(., month_yr + name ~ country, value.var = "popularity", fun.aggregate = mean)
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),popularity)] %>%
dcast(., month_yr + name ~ country, value.var = "popularity", fun.aggregate = function(x){round(mean(x),digits = 2)})
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),popularity)] %>%
dcast(., month_yr + name ~ country, value.var = "popularity", fun.aggregate = function(x){round(mean(x),digits = 1)})
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),popularity)] %>%
dcast(., month_yr + name ~ country, value.var = "popularity", fun.aggregate = function(x){round(mean(x),digits = 1, na.omit = T)})
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),popularity)] %>%
dcast(., month_yr + name ~ country, value.var = "popularity", fun.aggregate = function(x){round(mean(x),digits = 1, na.rm = T)})
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),popularity)] %>%
dcast(., month_yr + name ~ country, value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
data
data[country != "", .(name,country,month_yr = format(snapshot_date,"%Y-%m"),weekly_movement)] %>%
dcast(., month_yr + name ~ country, value.var = "weekly_movement", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
data
data[country != "", .(name,country,yr = format(snapshot_date,"%Y"),popularity)] %>%
dcast(., country + name ~ yr, value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
data[country != "", .(name,country,yr = format(snapshot_date,"%Y"),popularity)] %>%
dcast(., name ~ yr, value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
data[country != "", .(name,country,yr = format(snapshot_date,"%Y"),popularity)] %>%
dcast(., country + name ~ yr, value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
dcast(data, country + name ~ yr = format(snapshot_date,"%Y"), value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = .(daily_rank, popularity), fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = list(daily_rank, popularity), fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
data
dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = c("daily_rank", "popularity"), fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = c("daily_rank", "popularity"), fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
pop_rank_per_year <- dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = c("daily_rank", "popularity"), fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
colA = paste0("daily_rank_", 2023:2024)
colA
colB
colB = paste0("popularity_", 2023:2024)
pop_rank_per_year %>% melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"))
pop_rank_per_year %>% melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = c("2023","2024"))
pop_rank_per_year %>% melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = list("2023","2024"))
pop_rank_per_year %>% melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"))
pop_rank_per_year %>% melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = "year")
pop_rank_per_year %>%
melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = "year")[,year := factor(year, levels = c(2023,2024))]
pop_rank_per_year %>%
melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = "year")[,year := factor(year, levels = c(2023,2024))]
pop_rank_year_long <- pop_rank_per_year %>%
melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = "year")
pop_rank_year_long[,year := factor(year, levels = c(2023,2024))]
pop_rank_year_long
pop_rank_year_long[,year := ifelse(year == 1, 2023,2024)]
pop_rank_year_long <- pop_rank_per_year %>%
melt(., measure = list(colA, colB), value.name = c("daily_rank", "popularity"), variable.name = "year")
pop_rank_year_long[,year := ifelse(year == 1, 2023,2024)]
pop_rank_year_long
pop_rank_per_year <- dcast(data, country + name ~ format(snapshot_date,"%Y"), value.var = c("daily_rank", "popularity"), sep = ".", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
pop_rank_per_year
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year, sep="."), value.name = c("daily_rank", "popularity"), variable.name = "year")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year, sep="."), variable.name = "year")
pop_rank_per_year
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year, sep="."), variable.name = "year")
pop_rank_per_year
dcast(data[country != ""], country + name ~ format(snapshot_date,"%Y"), value.var = "popularity", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
pop_rank_per_year <- dcast(data[country != ""], country + name ~ format(snapshot_date,"%Y"), value.var = c("daily_rank", "popularity"), sep = ".", fun.aggregate = function(x){round(mean(x, na.rm = T),digits = 1)})
pop_rank_per_year
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year, sep="."), variable.name = "year")
pop_rank_year_long <- pop_rank_per_year %>%
melt(., measure = patterns("^daily_rank.", "^popularity."), value.name = c("daily_rank", "popularity"), variable.name = "year")
pop_rank_year_long
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, as.integer(year), sep="."), variable.name = "year")
pop_rank_per_year
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year, sep="."), variable.name = "year")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year=as.integer, sep="."), variable.name = "year")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year=as.integer, sep="."), variable.name = "variable")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year=as.integer, sep="."), variable.name = "var")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year=as.integer, sep="."), measure.name = "var")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year=as.integer, sep="."), value.name = "mean")
pop_rank_per_year %>%
melt(., measure.vars = measure(variable, year=as.integer, sep="."), value.name = "mean", variable.name = "var")
pop_rank_per_year %>%
melt(., measure.vars = measure(var, year=as.integer, sep="."), value.name = "mean")
pop_rank_per_year %>%
melt(., measure.vars = measure(var=as.factor, year=as.integer, sep="."), value.name = "mean")
data
data[,.SD]
dim(data[,.SD])
dim(data)
dim(data[,.SD])
identical(Pitching, Pitching[ , .SD])
identical(data, data[ , .SD])
str(data)
data[,names(.SD)]
class(data[,names(.SD)])
data[,names(.SD) := lapply(.SD,character)]
data[,names(.SD) := lapply(.SD,as.character)]
data[,names(.SD) := lapply(.SD,as.character), .SDcols = .SD]
data[,names(.SD) := lapply(.SD,as.character), .SDcols = names(.SD)]
data
load('Pitching.RData')
setDT(Pitching)
data[,.SD,.SDcols = is.numeric]
data[,names(.SD) := lapply(.SD, numeric),.SDcols = is.numeric]
data[,names(.SD) = lapply(.SD, numeric),.SDcols = is.numeric]
data[,names(.SD) := lapply(.SD, numeric),.SDcols = is.numeric]
names(data)
data[,names(.SD) ,.SDcols = is.numeric]
data[,names(.SD) := lapply(.SD, numeric),.SDcols = c("mode","acousticness")]
data[,(names(.SD)) := lapply(.SD, numeric),.SDcols = c("mode","acousticness")]
data[,(names(.SD)) := lapply(.SD, numeric),.SDcols = names(.SD)]
data[,(names(.SD)) := lapply(.SD, numeric),.SDcols = names(data)]
data[,(names(.SD)) := lapply(.SD, numeric)]
data[,names(.SD) := lapply(.SD, numeric),.SDcols = is.numeric]
data[, (names(data)[sapply(data, is.numeric)]) := lapply(.SD, as.numeric), .SDcols = is.numeric]
(names(data)[sapply(data, is.numeric)])
t = (names(data)[sapply(data, is.numeric)])
data[, t := lapply(.SD, as.numeric), .SDcols = is.numeric]
colnames(data)
data[, names(.SD) := lapply(.SD, character), .SDcols = patterns('_')]
install.packages("data.table", repos="https://rdatatable.gitlab.io/data.table")
install.packages("data.table", repos = "https://rdatatable.gitlab.io/data.table")
library(data.table)
data[, names(.SD) := lapply(.SD, character), .SDcols = patterns('_')]
data[, names(.SD) := lapply(.SD, character), .SDcols = patterns('_')]
data[,.SD,.SDcols = is.numeric]
data[, (names(data)[sapply(data, is.numeric)]) := lapply(.SD, as.numeric), .SDcols = is.numeric]
data[, names(.SD) := lapply(.SD, character), .SDcols = is.numeric]
colnames(data)
data[, names(.SD) := lapply(.SD, character), .SDcols = patterns('^a')]
load("data/Teams.RData")
setDT(Teams)
library(data.table)
setDT(Teams)
Teams[ , names(.SD) := lapply(.SD, factor), .SDcols = patterns('teamID')]
load("data/Teams.RData")
setDT(Teams)
Teams
names(Teams)
library(data.table)
library(data.table)
library(magrittr)
library(ggplot2)
data = fread("data/universal_top_spotify_songs.csv.gz")
lm(popularity~danceability, data = data )
t <- lm(popularity~danceability, data = data )
str(t)
t <- summary(lm(popularity~danceability, data = data ))
t
t$coefficients
t$r.squared
t$adj.r.squared
t$coefficients
lms = sapply(models, function(rhs) {
data[ , .(coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
models = unlist(
lapply(1:length(vars), combn, x = vars, simplify = FALSE),
recursive = FALSE
)
library(data.table)
library(magrittr)
library(ggplot2)
data = fread("data/universal_top_spotify_songs.csv.gz")
num_vars <- data[,.SD, .SDcols = is.numeric]
colnames(num_vars)
vars <- c("danceability","energy","loudness","valence")
models = unlist(
lapply(1:length(vars), combn, x = vars, simplify = FALSE),
recursive = FALSE
)
lms = sapply(models, function(rhs) {
data[ , .(coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
lms[[1]]
lms
lms = lapply(models, function(rhs) {
data[ , .(coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
lms
t <- coef(lm(popularity~danceability, data = data ))
t
lm(popularity~danceability, data = data )
rhs = models[[1]]
c("Intercept",rhs)
lms = lapply(models, function(rhs) {
data[ , .(terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
lms[[1]]
lms[[2]]
data[ , .( call = paste("popularity ~ ",rhs,sep = " + "),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
data[ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
lms = lapply(models, function(rhs) {
data[ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
lms[[2]]
do.call(rbind,lms)
data[snapshot_date == max(snapshot_date),][ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
lms = lapply(models, function(rhs) {
data[snapshot_date == max(snapshot_date),][ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
do.call(rbind,lms)
summary(lm(popularity ~ ., data = .SD))$adj.r.squared)
t <- summary(lm(popularity~danceability, data = data ))
t
t$coefficients
summary(lm(popularity~danceability, data = data ))$coefficients[,4]
lms = lapply(models, function(rhs) {
data[snapshot_date == max(snapshot_date),][ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
pvals = summary(lm(popularity ~ ., data = .SD))$coefficients[,4]
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
data[snapshot_date == max(snapshot_date),][ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
pvals = summary(lm(popularity ~ ., data = .SD))$coefficients[,4],
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
lms = lapply(models, function(rhs) {
data[snapshot_date == max(snapshot_date),][ , .( call = paste("popularity ~ ",paste(rhs,sep = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
pvals = summary(lm(popularity ~ ., data = .SD))$coefficients[,4],
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
do.call(rbind,lms)
rhs
models[[10]]
rhs = models[[10]]
paste(rhs,sep = " + ")
paste(rhs,sep = " + ")
rhs
aste(rhs,sep = " + ")
aste(rhs,sep = " + ")
paste(rhs,sep = " + ")
paste(rhs,sep = " + ")
paste(rhs,sep = " + ")
paste(rhs,sep = " + ")
?paste
paste(rhs,collapse = " + ")
lms = lapply(models, function(rhs) {
data[snapshot_date == max(snapshot_date),][ , .( call = paste("popularity ~ ",paste(rhs,collapse = " + ")),
terms = c("Intercept",rhs),
coefs = coef(lm(popularity ~ ., data = .SD)),
pvals = summary(lm(popularity ~ ., data = .SD))$coefficients[,4],
radj = summary(lm(popularity ~ ., data = .SD))$adj.r.squared), .SDcols = rhs]
})
do.call(rbind,lms)
t <- do.call(rbind,lms)
t
results <- do.call(rbind,lms)
results
data[snapshot_date == max(snapshot_date),]
data[snapshot_date == max(snapshot_date),] %>%
ggplot(aes(x = danceability, y = popularity))+
geom_point()
data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("danceability","energy","loudness","valence")]
merge(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.cols = list(country,name), variable.name = "var", value.name = "value")
data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")]
merge(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.cols = c("country","name"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = danceability, y = popularity))+
geom_point()
merge(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.cols = c("country","name"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.cols = c("country","name"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.cols = c("country","name","popularity"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.cols = c("country","name","popularity"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = value, y = popularity))+
geom_point()+
facet_wrap(~"var")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = value, y = popularity))+
geom_point()+
facet_wrap(~"var")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = value, y = popularity))+
geom_point()+
facet_wrap(~"var", scales = "free")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = value, y = popularity))+
geom_point()+
facet_grid(~"var", scales = "free")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = value, y = popularity))+
geom_point()+
facet_grid(~var, scales = "free")
melt(data[snapshot_date == max(snapshot_date),.SD,.SDcols = c("country","name","danceability","energy","loudness","valence","popularity")], id.vars = c("country","name","popularity"), variable.name = "var", value.name = "value") %>%
ggplot(aes(x = value, y = popularity))+
geom_point()+
facet_wrap(~var, scales = "free")
library(ggpairs)
library(ggally)
library(ggally)
library(GGally)
data[snapshot_date == max(snapshot_date)] %>% ggpairs()
data[snapshot_date == max(snapshot_date),c("danceability","energy","loudness","valence","popularity")] %>% ggpairs()
data[snapshot_date == max(snapshot_date),c("danceability","energy","loudness","valence","popularity")] %>% ggpairs()+theme_bw()
models
unique(lms$call)
unique(results$call)
unique(results$call)
lm(popularity ~ models[[1]], data = data[snapshot_date == max(snapshot_date),])
models[[1]]
ggplot(aes(x = value, y = popularity))+)
lm(popularity ~ models[[1]], data = data[snapshot_date == max(snapshot_date),])
lm(popularity ~ danceability, data = data[snapshot_date == max(snapshot_date),])
summary(lm(popularity ~ danceability, data = data[snapshot_date == max(snapshot_date),]))
