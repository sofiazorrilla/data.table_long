{
  "hash": "5668ba4e772b76faf07db963ef4d3e70",
  "result": {
    "markdown": "---\ntitle: \"Filtros y selección de columnas\"\nformat: \n  html:\n    page-layout: full \n---\n\n::: {.cell}\n\n:::\n\n\n# Operaciones sobre las filas\n\n## Seleccionar por índices\n\nSimilar a como se seleccionan filas en un data.frame, en un objeto data.table se pueden seleccionar filas utilizando rangos de índices. En los siguientes dos ejemplos se muestra como seleccionar las primeras dos filas de la tabla de registros. \n\n\n\n::: {.cell}\n\n:::\n\n\n```{.r}\nlibrary(data.table)\n\n\ndata = fread(\"data/universal_top_spotify_songs.csv\")\n```\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[1:2,] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               spotify_id               name               artists daily_rank daily_movement weekly_movement country\n                   <char>             <char>                <char>      <int>          <int>           <int>  <char>\n1: 2plbrEY59IikOBgBGLjaoe   Die With A Smile Lady Gaga, Bruno Mars          1              0               0        \n2: 6dOtVTDdiauQNBQEDOtlAB BIRDS OF A FEATHER         Billie Eilish          2              0               0        \n   snapshot_date popularity is_explicit duration_ms           album_name album_release_date danceability energy   key\n          <IDat>      <int>      <lgcl>       <int>               <char>             <IDat>        <num>  <num> <int>\n1:    2024-09-08         97       FALSE      251667     Die With A Smile         2024-08-16        0.521  0.592     6\n2:    2024-09-08        100       FALSE      210373 HIT ME HARD AND SOFT         2024-05-17        0.747  0.507     2\n   loudness  mode speechiness acousticness instrumentalness liveness valence   tempo time_signature\n      <num> <int>       <num>        <num>            <num>    <num>   <num>   <num>          <int>\n1:   -7.777     0      0.0304        0.308           0.0000    0.122   0.535 157.969              3\n2:  -10.171     1      0.0358        0.200           0.0608    0.117   0.438 104.978              4\n```\n:::\n:::\n\n\n<br>\n\n**Nota:** Cuando solo estamos seleccionando filas no es necesario incluir la coma al final.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[1:2] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               spotify_id               name               artists daily_rank daily_movement weekly_movement country\n                   <char>             <char>                <char>      <int>          <int>           <int>  <char>\n1: 2plbrEY59IikOBgBGLjaoe   Die With A Smile Lady Gaga, Bruno Mars          1              0               0        \n2: 6dOtVTDdiauQNBQEDOtlAB BIRDS OF A FEATHER         Billie Eilish          2              0               0        \n   snapshot_date popularity is_explicit duration_ms           album_name album_release_date danceability energy   key\n          <IDat>      <int>      <lgcl>       <int>               <char>             <IDat>        <num>  <num> <int>\n1:    2024-09-08         97       FALSE      251667     Die With A Smile         2024-08-16        0.521  0.592     6\n2:    2024-09-08        100       FALSE      210373 HIT ME HARD AND SOFT         2024-05-17        0.747  0.507     2\n   loudness  mode speechiness acousticness instrumentalness liveness valence   tempo time_signature\n      <num> <int>       <num>        <num>            <num>    <num>   <num>   <num>          <int>\n1:   -7.777     0      0.0304        0.308           0.0000    0.122   0.535 157.969              3\n2:  -10.171     1      0.0358        0.200           0.0608    0.117   0.438 104.978              4\n```\n:::\n:::\n\n\n<br>\n\n## Filtrar filas\n\nDe acuerdo con la sintaxis del paquete, el espacio i es el lugar en el que se pueden realizar operaciones sobre las filas como los filtros. Por ejemplo, utilizando la tabla de canciones podríamos estar interesados en solo seleccionar aquellos registros que pertenezcan a México. \n\n```{.r}\ndata_MX <- data[country == \"MX\",] \n\ndim(data_MX)\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16256    25\n```\n:::\n:::\n\n\nO podríamos estar interesadas en seleccionar solo los registros más viejos, los que fueron publicados antes del 2000. \n\n```{.r}\ndata_MX_viejos <- data[country == \"MX\" & album_release_date <= 2000,]\n\ndim(data_MX_viejos)\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1]  2 25\n```\n:::\n:::\n\n\nOperadores lógicos para hacer los filtros:\n\n|  Operador |          Comparación         |    Ejemplo    | Resultado |\n|:---------:|:----------------------------:|:-------------:|:---------:|\n| x \\| y    | x Ó y es verdadero           | TRUE \\| FALSE | TRUE      |\n| x & y     | x Y y son verdaderos         | TRUE & FALSE  | FALSE     |\n| !x        | x no es verdadero (negación) | !TRUE         | FALSE     |\n| isTRUE(x) | x es verdadero (afirmación)  | isTRUE(TRUE)  | TRUE      |\n\n<br>\n\n## Ordenar filas\n\nOtra función que se puede realizar en el espacio de las filas es ordenarlas. Por ejemplo, podríamos ordenar la tabla de canciones de México por qué tan bailable es.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ordenar los datos de la tabla de registros de Quercus por estado en orden alfabetico\n\nordered_data_MX = data_MX[order(danceability, decreasing = T)]\n\n# seleccionar la columna de estado como vector y seleccionar los valores únicos\n# mostrar solo los primeros valores\n\nunique(ordered_data_MX$danceability) |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.937 0.924 0.922 0.920 0.918 0.913\n```\n:::\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Reto\n\n1. Carga el archivo de canciones utilizando la función fread que revisamos en el tema anterior\n2. Utiliza un filtro para quedarte con las filas que pertenezcan al pais que te interese\n3. Ordena de manera descendente por ranking\n\nPregunta:\n\n¿De qué rango de años son las 50 canciones más escuchadas \n::: \n\n::: {.callout-note collapse=\"true\"}\n## Respuesta\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata_MX_ordenado <- data_MX[order(-daily_rank)] \n\nyears <- unique(format(data_MX_ordenado$album_release_date,\"%Y\"))\n\nc(min(years),max(years))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1963\" \"2024\"\n```\n:::\n:::\n\n:::\n\n<br>\n<br>\n\n# Operaciones sobre las columnas\n\n## Seleccionar columnas por índice\n\nDe acuerdo con la sintaxis del paquete, el espacio j nos permite realizar operaciones sobre las columnas. Una de esas operaciones es la selección de columnas. \n\nSe pueden seleccionar por medio de índices:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[,c(2,3,7),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                      name                     artists country\n                                    <char>                      <char>  <char>\n      1:                  Die With A Smile       Lady Gaga, Bruno Mars        \n      2:                BIRDS OF A FEATHER               Billie Eilish        \n      3:                             Taste           Sabrina Carpenter        \n      4:                          Espresso           Sabrina Carpenter        \n      5:                               Who                       Jimin        \n     ---                                                                      \n1179449:         Slime You Out (feat. SZA)                  Drake, SZA      AE\n1179450: SAY MY GRACE (feat. Travis Scott)        Offset, Travis Scott      AE\n1179451:                            People                    Libianca      AE\n1179452:                        Rainy Days                           V      AE\n1179453:                             Prada cassö, RAYE, D-Block Europe      AE\n```\n:::\n:::\n\n\n\n## Seleccionar columnas por nombre\n\nSe pueden seleccionar las columas por nombre y regresar como vector:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[,name] |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Die With A Smile\"             \"BIRDS OF A FEATHER\"           \"Taste\"                       \n[4] \"Espresso\"                     \"Who\"                          \"Si Antes Te Hubiera Conocido\"\n```\n:::\n:::\n\n\nSe pueden seleccionar las columnas usando una lista y regresar como tabla:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[,list(artists,name,album_name)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             artists                              name           album_name\n                              <char>                            <char>               <char>\n      1:       Lady Gaga, Bruno Mars                  Die With A Smile     Die With A Smile\n      2:               Billie Eilish                BIRDS OF A FEATHER HIT ME HARD AND SOFT\n      3:           Sabrina Carpenter                             Taste       Short n' Sweet\n      4:           Sabrina Carpenter                          Espresso       Short n' Sweet\n      5:                       Jimin                               Who                 MUSE\n     ---                                                                                   \n1179449:                  Drake, SZA         Slime You Out (feat. SZA)     For All The Dogs\n1179450:        Offset, Travis Scott SAY MY GRACE (feat. Travis Scott)           SET IT OFF\n1179451:                    Libianca                            People               People\n1179452:                           V                        Rainy Days              Layover\n1179453: cassö, RAYE, D-Block Europe                             Prada                Prada\n```\n:::\n:::\n\n\nUn atajo para no escribir `list()` es `.()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[,.(artists,name,album_name)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             artists                              name           album_name\n                              <char>                            <char>               <char>\n      1:       Lady Gaga, Bruno Mars                  Die With A Smile     Die With A Smile\n      2:               Billie Eilish                BIRDS OF A FEATHER HIT ME HARD AND SOFT\n      3:           Sabrina Carpenter                             Taste       Short n' Sweet\n      4:           Sabrina Carpenter                          Espresso       Short n' Sweet\n      5:                       Jimin                               Who                 MUSE\n     ---                                                                                   \n1179449:                  Drake, SZA         Slime You Out (feat. SZA)     For All The Dogs\n1179450:        Offset, Travis Scott SAY MY GRACE (feat. Travis Scott)           SET IT OFF\n1179451:                    Libianca                            People               People\n1179452:                           V                        Rainy Days              Layover\n1179453: cassö, RAYE, D-Block Europe                             Prada                Prada\n```\n:::\n:::\n\n\nSeleccionar columnas por rangos usando nombres:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[,spotify_id:weekly_movement]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     spotify_id                              name                     artists daily_rank daily_movement\n                         <char>                            <char>                      <char>      <int>          <int>\n      1: 2plbrEY59IikOBgBGLjaoe                  Die With A Smile       Lady Gaga, Bruno Mars          1              0\n      2: 6dOtVTDdiauQNBQEDOtlAB                BIRDS OF A FEATHER               Billie Eilish          2              0\n      3: 5G2f63n7IPVPPjfNIGih7Q                             Taste           Sabrina Carpenter          3              0\n      4: 2HRqTpkrJO5ggZyyK6NPWz                          Espresso           Sabrina Carpenter          4             46\n      5: 7tI8dRuH2Yc6RuoTjxo4dU                               Who                       Jimin          5              0\n     ---                                                                                                               \n1179449: 0AYt6NMyyLd0rLuvr0UkMH         Slime You Out (feat. SZA)                  Drake, SZA         46              4\n1179450: 2Gk6fi0dqt91NKvlzGsmm7 SAY MY GRACE (feat. Travis Scott)        Offset, Travis Scott         47              3\n1179451: 26b3oVLrRUaaybJulow9kz                            People                    Libianca         48              2\n1179452: 5ydjxBSUIDn26MFzU3asP4                        Rainy Days                           V         49              1\n1179453: 59NraMJsLaMCVtwXTSia8i                             Prada cassö, RAYE, D-Block Europe         50              0\n         weekly_movement\n                   <int>\n      1:               0\n      2:               0\n      3:               0\n      4:              46\n      5:               0\n     ---                \n1179449:               0\n1179450:               0\n1179451:               0\n1179452:               0\n1179453:               0\n```\n:::\n:::\n\n\nPara seleccionar columnas guardadas en una variable se puede utilizar el prefijo `..`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvariables <- c(\"artists\",\"name\",\"album_name\")\n\ndata[ , ..variables]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             artists                              name           album_name\n                              <char>                            <char>               <char>\n      1:       Lady Gaga, Bruno Mars                  Die With A Smile     Die With A Smile\n      2:               Billie Eilish                BIRDS OF A FEATHER HIT ME HARD AND SOFT\n      3:           Sabrina Carpenter                             Taste       Short n' Sweet\n      4:           Sabrina Carpenter                          Espresso       Short n' Sweet\n      5:                       Jimin                               Who                 MUSE\n     ---                                                                                   \n1179449:                  Drake, SZA         Slime You Out (feat. SZA)     For All The Dogs\n1179450:        Offset, Travis Scott SAY MY GRACE (feat. Travis Scott)           SET IT OFF\n1179451:                    Libianca                            People               People\n1179452:                           V                        Rainy Days              Layover\n1179453: cassö, RAYE, D-Block Europe                             Prada                Prada\n```\n:::\n:::\n\n\nNota: Tanto los objetos data.frame como los data.table son listas (aun cuando las vemos como tablas). El hecho de que las operaciones realizadas en el espacio j regresen listas es muy poderoso y permite hacer operaciones más complicadas más adelante.\n\n::: {.callout-note collapse=\"true\"}\n## Reto\n\nA. Me gustaría tener un data frame en donde solo tuviera la información de las características de las canciones (por ejemplo: duración, energía, etc.)\n\n  1. Enlista los nombres de columnas y analiza de qué tratan \n  2. Guarda los nombres de las columnas que solo contengan información acerca las características  en un objeto\n  3. Selecciona las columnas de la tabla data usando el objeto de nombres de columnas. \n\nB. Genera un objeto data.table que tenga los registros del mes de septiembre 2024 y las columnas que describen las características de las cancions (utiliza un solo comando).\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Respuesta\n\ninfo_canciones <- c(\"duration_ms\", \"danceability\", \"energy\", \"loudness\", \"speechiness\", \"acousticness\",\"instrumentalness\",\"liveness\")\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ninfo_canciones <- c(\"duration_ms\", \"danceability\", \"energy\", \"loudness\", \"speechiness\", \"acousticness\",\"instrumentalness\",\"liveness\")\n\ndata[,..info_canciones,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         duration_ms danceability energy loudness speechiness acousticness instrumentalness liveness\n               <int>        <num>  <num>    <num>       <num>        <num>            <num>    <num>\n      1:      251667        0.521  0.592   -7.777      0.0304      0.30800         0.00e+00    0.122\n      2:      210373        0.747  0.507  -10.171      0.0358      0.20000         6.08e-02    0.117\n      3:      157279        0.674  0.907   -4.086      0.0640      0.10100         0.00e+00    0.297\n      4:      175459        0.699  0.776   -5.282      0.0293      0.13100         5.36e-06    0.205\n      5:      170887        0.660  0.756   -3.743      0.0320      0.00289         0.00e+00    0.193\n     ---                                                                                            \n1179449:      310490        0.483  0.408   -9.243      0.0502      0.50800         0.00e+00    0.259\n1179450:      173253        0.773  0.635   -5.060      0.0452      0.05850         0.00e+00    0.132\n1179451:      184791        0.573  0.422   -7.621      0.0678      0.55100         1.31e-05    0.102\n1179452:      179560        0.633  0.454   -8.016      0.0875      0.73900         0.00e+00    0.148\n1179453:      132359        0.638  0.717   -5.804      0.0375      0.00100         1.79e-06    0.113\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ndata[format(snapshot_date, \"%Y-%m\") == \"2024-09\" , ..info_canciones]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       duration_ms danceability energy loudness speechiness acousticness instrumentalness liveness\n             <int>        <num>  <num>    <num>       <num>        <num>            <num>    <num>\n    1:      251667        0.521  0.592   -7.777      0.0304      0.30800         0.00e+00   0.1220\n    2:      210373        0.747  0.507  -10.171      0.0358      0.20000         6.08e-02   0.1170\n    3:      157279        0.674  0.907   -4.086      0.0640      0.10100         0.00e+00   0.2970\n    4:      175459        0.699  0.776   -5.282      0.0293      0.13100         5.36e-06   0.2050\n    5:      170887        0.660  0.756   -3.743      0.0320      0.00289         0.00e+00   0.1930\n   ---                                                                                            \n29196:      140733        0.882  0.764   -5.241      0.2040      0.35900         0.00e+00   0.1190\n29197:      180000        0.840  0.715   -5.141      0.1870      0.17600         0.00e+00   0.0935\n29198:      241000        0.330  0.313  -10.906      0.0353      0.53600         5.70e-06   0.2770\n29199:      131872        0.749  0.729   -3.190      0.0321      0.26100         0.00e+00   0.1130\n29200:      151739        0.804  0.957   -5.452      0.0340      0.12500         1.74e-02   0.1140\n```\n:::\n:::\n\n\n:::\n\n## Deseleccionar columas\n\nSimilar a las formas de seleccionar columnas podemos utilizar los operadores `-` y `!` para evitar la selección de ciertas columnas o rangos de columnas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[,-c(\"name\",\"artists\")] %>% colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"spotify_id\"         \"daily_rank\"         \"daily_movement\"     \"weekly_movement\"    \"country\"           \n [6] \"snapshot_date\"      \"popularity\"         \"is_explicit\"        \"duration_ms\"        \"album_name\"        \n[11] \"album_release_date\" \"danceability\"       \"energy\"             \"key\"                \"loudness\"          \n[16] \"mode\"               \"speechiness\"        \"acousticness\"       \"instrumentalness\"   \"liveness\"          \n[21] \"valence\"            \"tempo\"              \"time_signature\"    \n```\n:::\n\n```{.r .cell-code}\ndata[,!c(\"spotify_id\")] %>% colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"name\"               \"artists\"            \"daily_rank\"         \"daily_movement\"     \"weekly_movement\"   \n [6] \"country\"            \"snapshot_date\"      \"popularity\"         \"is_explicit\"        \"duration_ms\"       \n[11] \"album_name\"         \"album_release_date\" \"danceability\"       \"energy\"             \"key\"               \n[16] \"loudness\"           \"mode\"               \"speechiness\"        \"acousticness\"       \"instrumentalness\"  \n[21] \"liveness\"           \"valence\"            \"tempo\"              \"time_signature\"    \n```\n:::\n\n```{.r .cell-code}\ndata[,!(key:time_signature)] %>% colnames()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"spotify_id\"         \"name\"               \"artists\"            \"daily_rank\"         \"daily_movement\"    \n [6] \"weekly_movement\"    \"country\"            \"snapshot_date\"      \"popularity\"         \"is_explicit\"       \n[11] \"duration_ms\"        \"album_name\"         \"album_release_date\" \"danceability\"       \"energy\"            \n```\n:::\n:::\n\n\n## Renombrar columnas\n\nEn el espacio de operaciones sobre las columnas también se pueden renombrar las columnas. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata[, .(artista = artists, song_name = name)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             artista                         song_name\n                              <char>                            <char>\n      1:       Lady Gaga, Bruno Mars                  Die With A Smile\n      2:               Billie Eilish                BIRDS OF A FEATHER\n      3:           Sabrina Carpenter                             Taste\n      4:           Sabrina Carpenter                          Espresso\n      5:                       Jimin                               Who\n     ---                                                              \n1179449:                  Drake, SZA         Slime You Out (feat. SZA)\n1179450:        Offset, Travis Scott SAY MY GRACE (feat. Travis Scott)\n1179451:                    Libianca                            People\n1179452:                           V                        Rainy Days\n1179453: cassö, RAYE, D-Block Europe                             Prada\n```\n:::\n:::\n",
    "supporting": [
      "tema3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}